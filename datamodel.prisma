type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  firstName: String! @default(value: "")
  lastName: String
  bio: String
  posts: [Post!]!
  likes: [Like!]!
  comments: [Comment!]!
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  rooms: [Room!]!
  loginSecret: String
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User!
  files: [File!]! @relation(name: "FilesOfPost" onDelete:CASCADE)
  likes: [Like!]! @relation(name: "LikesOfpOST" onDelete:CASCADE)
  comments: [Comment!]!
}

type Like {
  id: ID! @id
  user: User!
  post: Post @relation(name: "LikesOfpOST")
}

type Comment {
  id: ID! @id
  text: String!
  user: User!
  post: Post!
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room{
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
}

type Message{
  id: ID! @id
  test: String!
  from: User! @relation(name: "FROM")
  to: User! @relation(name: "TO")
  room: Room!
}